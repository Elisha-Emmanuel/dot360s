# Generated by Django 3.1 on 2020-10-26 04:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('firstname', models.CharField(max_length=150)),
                ('lastname', models.CharField(blank=True, max_length=150, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_driver', models.BooleanField(default=False)),
                ('phone', models.CharField(max_length=14, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number without spaces or hyphens', regex='(?:^[+]{1}[0-9]*$)|(?:^0{1}[0-9]{10}$)')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default.jpg', upload_to='profile_pics/', verbose_name='Profile Picture')),
                ('location', models.PositiveIntegerField(blank=True, choices=[(1, 'Aba'), (2, 'Umuahia'), (3, 'Port Harcourt'), (4, 'Owerri')], null=True, verbose_name='Present City')),
                ('status', models.CharField(choices=[('NA', 'Not Avaliable'), ('BU', 'Busy'), ('AV', 'Avaliable')], default='NA', max_length=2, verbose_name='Status')),
                ('journey_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('IN', 'Within The City'), ('OUT', 'Outside Your Current City')], default='IN', max_length=6, null=True, verbose_name='Journey')),
                ('user', models.OneToOneField(limit_choices_to={'is_driver': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_address', models.CharField(max_length=70, null=True, verbose_name='From')),
                ('to_address', models.CharField(max_length=70, null=True, verbose_name='To')),
                ('city', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Aba'), (2, 'Umuahia'), (3, 'Port Harcourt'), (4, 'Owerri')], null=True)),
                ('no_of_passengers', models.IntegerField(default=1)),
                ('intercity', models.BooleanField(default=False)),
                ('load', models.BooleanField(default=False)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('request_vehicle_type', models.CharField(blank=True, choices=[('T', 'Tricycle'), ('B', 'Bus'), ('C', 'Car')], max_length=1, null=True)),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver', to='user.driver')),
                ('passenger', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='passenger', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('plate_number', models.CharField(blank=True, max_length=15, null=True)),
                ('color', models.CharField(blank=True, max_length=15, null=True)),
                ('capacity', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('vehicle_type', models.CharField(blank=True, choices=[('T', 'Tricycle'), ('B', 'Bus'), ('C', 'Car')], max_length=1, null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle', to='user.driver')),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('WC', 'Waiting For Confirmation'), ('WD', 'Waiting For Driver'), ('ON', 'Ongoing'), ('CO', 'Completed')], default='WC', max_length=2)),
                ('price', models.FloatField(default=100.0)),
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='request', to='user.request')),
            ],
        ),
    ]
