# Generated by Django 3.1 on 2020-10-17 06:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254,
                                            unique=True, verbose_name='Email Address')),
                ('firstname', models.CharField(max_length=150)),
                ('lastname', models.CharField(blank=True, max_length=150, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(
                    max_length=128, null=True, region=None, unique=True, verbose_name='Phone Number')),
                ('user_type', models.PositiveSmallIntegerField(
                    choices=[(1, 'driver'), (2, 'passenger')], null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('from_address', models.CharField(max_length=70, null=True)),
                ('to_address', models.CharField(max_length=70, null=True)),
                ('city', models.CharField(blank=True, choices=[
                 (1, 'Umuahia'), (2, 'Aba')], max_length=15, null=True)),
                ('no_of_passengers', models.IntegerField(default=1)),
                ('load', models.BooleanField(default=False)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('driver', models.ForeignKey(limit_choices_to={
                 'user_type': '1'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver', to=settings.AUTH_USER_MODEL)),
                ('passenger', models.ForeignKey(limit_choices_to={
                 'user_type': '2'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='passenger', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, null=True)),
                ('plate_number', models.CharField(max_length=15, null=True)),
                ('color', models.CharField(max_length=15, null=True)),
                ('capacity', models.IntegerField(null=True)),
                ('vehicle_type', models.PositiveSmallIntegerField(
                    choices=[(1, 'Tricycle'), (2, 'Bus'), (3, 'Car')], null=True)),
                ('owner', models.ForeignKey(limit_choices_to={
                 'user_type': '1'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[
                 (1, 'Waiting for confirmation'), (2, 'Waiting for driver'), (3, 'Ongoing'), (4, 'Completed')], null=True)),
                ('price', models.FloatField(default=100.0)),
                ('request', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE, to='user.request')),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(
                    default='default.jpg', upload_to='profile_pics/')),
                ('location', models.PositiveIntegerField(blank=True,
                                                         choices=[(1, 'Umuahia'), (2, 'Aba')], null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[
                 (1, 'Not Avaliable'), (2, 'Busy'), (3, 'Avaliable')], default=1)),
                ('journey_type', models.PositiveSmallIntegerField(choices=[
                 (1, 'Within the city'), (2, 'InterCity travel')], default=1)),
                ('user', models.OneToOneField(limit_choices_to={
                 'user_type': '1'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
